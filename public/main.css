/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.video__selected__video, .video__selected, .video, .about__media__figure__image, .home__gallery__image__figure__image, .home__gallery__wrapper, .home__gallery, .home__logo__figure__image, .home__logo, .navigation__logo__figure__image, .gallery__media__div__figure__image, .gallery__media, .gallery__modal, .menu__gallery__image__figure__image, .menu__wrapper, .preloader, .content, body, html, .about, .home, .menu {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.about__contact__details, .about__contact__title, .about__desc__location, .about__desc__gc__title, .about__background__gc__smdesc, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Recommended styles for Splitting */
.splitting .word,
.splitting .char {
  display: inline-block;
}

/* Psuedo-element chars */
.splitting .char {
  position: relative;
}

/**
 * Populate the psuedo elements with the character to allow for expanded effects
 * Set to `display: none` by default; just add `display: block` when you want
 * to use the psuedo elements
 */
.splitting .char::before,
.splitting .char::after {
  content: attr(data-char);
  position: absolute;
  top: 0;
  left: 0;
  visibility: hidden;
  transition: inherit;
  user-select: none;
}

/* Expanded CSS Variables */
.splitting {
  /* The center word index */
  --word-center: calc((var(--word-total) - 1) / 2);
  /* The center character index */
  --char-center: calc((var(--char-total) - 1) / 2);
  /* The center character index */
  --line-center: calc((var(--line-total) - 1) / 2);
}

.splitting .word {
  /* Pecent (0-1) of the word's position */
  --word-percent: calc(var(--word-index) / var(--word-total));
  /* Pecent (0-1) of the line's position */
  --line-percent: calc(var(--line-index) / var(--line-total));
}

.splitting .char {
  /* Percent (0-1) of the char's position */
  --char-percent: calc(var(--char-index) / var(--char-total));
  /* Offset from center, positive & negative */
  --char-offset: calc(var(--char-index) - var(--char-center));
  /* Absolute distance from center, only positive */
  --distance: calc(
     (var(--char-offset) * var(--char-offset)) / var(--char-center)
  );
  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
  --distance-sine: calc(var(--char-offset) / var(--char-center));
  /* Distance from center where 1 is far left/far right, 0 is center */
  --distance-percent: calc((var(--distance) / var(--char-center)));
}

.splitting.cells img {
  width: 100%;
  display: block;
}

@supports (display: grid) {
  .splitting.cells {
    position: relative;
    overflow: hidden;
    background-size: cover;
    visibility: hidden;
  }
  .splitting .cell-grid {
    background: inherit;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template: repeat(var(--row-total), 1fr)/repeat(var(--col-total), 1fr);
  }
  .splitting .cell {
    background: inherit;
    position: relative;
    overflow: hidden;
  }
  .splitting .cell-inner {
    background: inherit;
    position: absolute;
    visibility: visible;
    /* Size to fit the whole container size */
    width: calc(100% * var(--col-total));
    height: calc(100% * var(--row-total));
    /* Position properly */
    left: calc(-100% * var(--col-index));
    top: calc(-100% * var(--row-index));
  }
  /* Helper variables for advanced effects */
  .splitting .cell {
    --center-x: calc((var(--col-total) - 1) / 2);
    --center-y: calc((var(--row-total) - 1) / 2);
    /* Offset from center, positive & negative */
    --offset-x: calc(var(--col-index) - var(--center-x));
    --offset-y: calc(var(--row-index) - var(--center-y));
    /* Absolute distance from center, only positive */
    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );
    /* Absolute distance from center, only positive */
    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );
  }
}
.about, .home, .menu {
  opacity: 0;
  visibility: hidden;
}

.about__press__content__div, .home__gallery__image__link, .menu__gallery__image__link, .about__contact__details__text, .video__back__button, .hidden, .gallery__back__button, .gallery__modal__close__button, .selected {
  position: relative;
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}

/*
  line through - right out.
*/
/*
  Complete link through - left out.
*/
/*
  line through - right//left out.
*/
/*
  Complete link through - right left out.
*/
/*
  Bottom link line // from center.
*/
.video__back__button:after, .hidden:after, .gallery__back__button:after, .gallery__modal__close__button:after, .selected:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.video__back__button:hover:after, .hidden:hover:after, .gallery__back__button:hover:after, .gallery__modal__close__button:hover:after, .selected:after {
  transform: scaleX(1);
  transform-origin: center center;
}

.video__back__button:after, .hidden:after, .gallery__back__button:after, .gallery__modal__close__button:after {
  transform: scaleX(0);
  transform-origin: center center;
}

/*
  Complete link center.
*/
.selected {
  display: inline-block;
}
.video__back__button, .hidden, .gallery__back__button, .gallery__modal__close__button {
  display: inline-block;
}
/*
  Top link line left.
*/
.about__contact__details__text:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.about__contact__details__text:hover:before {
  transform: scaleX(1);
  transform-origin: left center;
}

.about__contact__details__text:before {
  transform: scaleX(0);
  transform-origin: right center;
}

/*
  Bottom link line right.
*/
.about__contact__details__text:after {
  content: "";
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.about__contact__details__text:hover:after {
  transform: scaleX(1);
  transform-origin: right center;
}

.about__contact__details__text:after {
  transform: scaleX(0);
  transform-origin: left center;
}

/*
  Complete link // top//btm.
*/
.about__contact__details__text {
  display: inline-block;
}
/*
  Top link line // Menu gallery.
*/
.home__gallery__image__link:before, .menu__gallery__image__link:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 5px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.home__gallery__image__link:hover:before, .menu__gallery__image__link:hover:before {
  transform: scaleX(1);
  transform-origin: left center;
}

.home__gallery__image__link:before, .menu__gallery__image__link:before {
  transform: scaleX(0);
  transform-origin: right center;
}

/*
  Bottom link line // Menu gallery.
*/
.home__gallery__image__link:after, .menu__gallery__image__link:after {
  content: "";
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 5px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.home__gallery__image__link:hover:after, .menu__gallery__image__link:hover:after {
  transform: scaleX(1);
  transform-origin: right center;
}

.home__gallery__image__link:after, .menu__gallery__image__link:after {
  transform: scaleX(0);
  transform-origin: left center;
}

/*
  Complete link // Menu gallery.
*/
.home__gallery__image__link, .menu__gallery__image__link {
  display: inline-block;
}
/*
  dot.
*/
.about__press__content__div:before {
  content: "";
  position: absolute;
  top: 45%;
  left: 0;
  transform: translateY(-50%);
  width: 1rem;
  height: 1rem;
  border-radius: 100%;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.77, 0, 0.175, 1);
}

.about__press__content__div:hover:before {
  transform: scale(1);
  transform-origin: center center;
}

.about__press__content__div:before {
  transform: scale(0);
  transform-origin: center center;
}

/*
  Complete link // Menu gallery.
*/
.about__press__content__div {
  display: inline-block;
  /* &:after {
    @extend %link__line__btm__menu;
    @extend %link__line__btm__menu--hidden;
  } */
}
.about__press__content__div:hover {
  /*  &:after {
     @extend %link__line__btm__menu--visible;
   } */
}
.about__desc__gc__title__text, .about__background__gc__bg__title__text {
  font-family: "Bodoni Libre";
  font-size: 2.5rem;
}

.video__back__button, .gallery__back__button, .gallery__info__title, .gallery__modal__close__button {
  font-family: "Bodoni Libre";
  font-size: 3rem;
}

.video__desc__text, .preloader__number {
  font-family: "Bodoni Libre";
  font-size: 4rem;
}

.about__press__title__text, .about__desc__location__text, .about__clients__title__text, .menu__gallery__image__title__text, .menu__title__text {
  font-family: "Bodoni Libre";
  font-size: 7rem;
}

.about__contact__title__text {
  font-family: "Bodoni Libre";
  font-size: 10rem;
}

.about__footer__title__text, .about__header__title__text {
  font-family: "Bodoni Libre";
  font-size: 20rem;
}

.gallery__info__desc, body {
  font-size: 1.6rem;
  font-weight: 300;
}

.video__info__text, .video__desc__title, .footer__title__text, .navigation__list__item__link, .menu__gallery__image__index__text, .menu__gallery__image__type__text {
  font-size: 2rem;
  font-weight: 300;
}

.about__press__content__div__title, .about__desc__gc__desc__text, .about__clients__gallery__client__name, .about__background__desc__frame__text {
  font-size: 2.5rem;
  font-weight: 300;
}

.about__contact__details__copied {
  font-size: 3rem;
  font-weight: 300;
}

.about__contact__details__text, .about__background__gc__smdesc__div__text {
  font-size: 4rem;
  font-weight: 300;
}

.video__back__button::first-letter, .gallery__back__button::first-letter, .gallery__modal__close__button::first-letter {
  font-size: 5rem;
  font-weight: 300;
}

@font-face {
  font-family: "Montserrat";
  src: url(5ab04ce694d89ff3ff13.woff2) format("woff2"), url(26f739ed3a0348e5d66a.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Bodoni Moda";
  src: url(4e857b056045ea28f163.woff2) format("woff2"), url(39e0d01d0e5e1aba4fde.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Bodoni Libre";
  src: url(e2e1fbb89791fbebd0ee.woff2) format("woff2"), url(c66549007d6d5c371f17.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
* {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-size: 0.5208333333vw;
  overscroll-behavior: none;
  overflow: hidden;
  position: fixed;
  background: #0D0D0D;
  color: #EEF1EF;
}
@media (max-width: 767px) {
  html {
    font-size: 1.3333333333vw;
  }
}

body {
  position: fixed;
  font-family: "Montserrat";
}

canvas {
  position: relative;
  z-index: 2;
  pointer-events: none;
}

a {
  color: inherit;
  text-decoration: none;
  outline: none;
}

img {
  opacity: 0;
  transition: opacity 0.5s ease;
  vertical-align: middle;
}
img.loaded {
  opacity: 1;
}

.content {
  border: 1px solid #5B5E5E;
  border-top: none;
}

[data-animation=title] .word {
  padding: 0 1rem;
}
[data-animation=title] .word .char {
  transform: translateY(100%);
}

[data-animation=paragraph] .word,
[data-animation=label] .word {
  overflow: hidden;
  padding: 0 0.5rem;
}

[data-animation=paragraph],
[data-animation=label],
[data-animation=title] {
  line-height: normal;
}
[data-animation=paragraph] span,
[data-animation=label] span,
[data-animation=title] span {
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}

.preloader {
  background: #0d0d0d;
  color: #EEF1EF;
  z-index: 8;
  /*  &__footer
   {
     width: 12rem;
     height: 10rem;
     background: $color-cultured;
     position: absolute;
     bottom: 0;
     right: 0;
     border: 1px solid $color-cultured;
     border-right: none;
     border-bottom: none;

     background: #0d0d0d;
   } */
}
.preloader__nav {
  width: 100%;
  height: 1px;
  background: #5B5E5E;
  position: absolute;
  top: 10rem;
  left: 50%;
  transform: translateX(-50%) scaleX(0);
  transform-origin: center;
}
.preloader__nav::before {
  content: "";
  position: absolute;
  top: 0;
  left: 100%;
  width: 100%;
  height: 1px;
  background: #0D0D0D;
}
.preloader__logoBorder {
  width: 1px;
  height: 10rem;
  background: #5B5E5E;
  position: absolute;
  top: 0;
  left: 12rem;
  transform: scaleY(0);
  transform-origin: top;
}
.preloader__logoBorder::before {
  content: "";
  position: absolute;
  top: 100%;
  left: 12rem;
  width: 100%;
  height: 100%;
  background: #0D0D0D;
}
.preloader__left {
  width: 2px;
  height: 100%;
  background: #5B5E5E;
  position: absolute;
  top: 0;
  left: 0;
  transform: translateX(-50%) scaleY(0);
  transform-origin: top;
}
.preloader__left::before {
  content: "";
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  height: 100%;
  background: #0D0D0D;
}
.preloader__right {
  width: 2px;
  height: 100%;
  background: #5B5E5E;
  position: absolute;
  top: 0;
  right: 0;
  transform: translateX(-50%) scaleY(0);
  transform-origin: top;
}
.preloader__right::before {
  content: "";
  position: absolute;
  top: 100%;
  right: 0;
  width: 100%;
  height: 100%;
  background: #0D0D0D;
}
.preloader__bottom {
  width: 100%;
  height: 2px;
  background: #5B5E5E;
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%) scaleX(0);
  transform-origin: center;
}
.preloader__bottom::before {
  content: "";
  position: absolute;
  top: 0;
  left: 100%;
  width: 100%;
  height: 1px;
  background: #0D0D0D;
}
.preloader__number {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  overflow: hidden;
  mix-blend-mode: difference;
}
.preloader__number__text {
  display: inline-block;
}
@media (max-width: 1023px) {
  .preloader__number__text {
    font-size: 4rem;
  }
}
@media (max-width: 767px) {
  .preloader__number__text {
    font-size: 2.5rem;
  }
}

.menu {
  overflow: hidden;
}
.menu__title {
  height: 100%;
  width: 12rem;
  position: absolute;
  bottom: 0;
  left: 0;
  white-space: nowrap;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  padding: 0 2rem;
  border-right: 1px solid #5B5E5E;
}
.menu__title__text {
  text-transform: uppercase;
  letter-spacing: 1rem;
  margin: 1rem 0;
  writing-mode: vertical-rl;
  transform: scale(-1, -1);
}
.menu__wrapper {
  z-index: 3;
}
.menu__gallery {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -15rem);
}
.menu__gallery__image {
  position: relative;
  display: flex;
  margin: 5rem 0;
}
.menu__gallery__image__link {
  padding: 2rem 0;
  display: block;
  z-index: 100;
  width: 100%;
}
.menu__gallery__image__figure {
  height: 20rem;
  width: 100rem;
  position: relative;
  visibility: hidden;
}
.menu__gallery__image__figure__image {
  object-fit: cover;
}
.menu__gallery__image__type {
  align-self: flex-start;
  padding: 2rem 0.5rem;
}
.menu__gallery__image__type__text {
  writing-mode: vertical-rl;
  transform: scale(-1, -1);
  word-spacing: 2rem;
  overflow: hidden;
  opacity: 0;
}
@media (max-width: 1023px) {
  .menu__gallery__image__type__text {
    font-size: 4rem;
    opacity: 1;
  }
}
@media (max-width: 767px) {
  .menu__gallery__image__type__text {
    font-size: 2rem;
    opacity: 1;
  }
}
.menu__gallery__image__type__text span {
  line-height: normal;
}
.menu__gallery__image__type__text span span {
  opacity: 0;
}
@media (max-width: 1023px) {
  .menu__gallery__image__type__text span span {
    opacity: 1;
  }
}
@media (max-width: 767px) {
  .menu__gallery__image__type__text span span {
    opacity: 1;
  }
}
.menu__gallery__image__index {
  align-self: flex-end;
  padding: 2rem 0.5rem;
}
.menu__gallery__image__index__text {
  writing-mode: vertical-rl;
  transform: scale(1, 1);
  word-spacing: 2rem;
  overflow: hidden;
  opacity: 0;
}
@media (max-width: 1023px) {
  .menu__gallery__image__index__text {
    font-size: 4rem;
    opacity: 1;
  }
}
@media (max-width: 767px) {
  .menu__gallery__image__index__text {
    font-size: 2rem;
    opacity: 1;
  }
}
.menu__gallery__image__index__text span {
  line-height: 1;
}
.menu__gallery__image__index__text span span {
  opacity: 0;
}
@media (max-width: 1023px) {
  .menu__gallery__image__index__text span span {
    opacity: 1;
  }
}
@media (max-width: 767px) {
  .menu__gallery__image__index__text span span {
    opacity: 1;
  }
}
.menu__gallery__image__title {
  mix-blend-mode: difference;
}
.menu__gallery__image__title__text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  text-shadow: -1px -1px 0 #0D0D0D, 1px -1px 0 #0D0D0D, -1px 1px 0 #0D0D0D, 1px 1px 0 #0D0D0D;
  width: 100%;
  padding: 0 1rem;
  overflow: hidden;
}
@media (max-width: 1023px) {
  .menu__gallery__image__title__text {
    font-size: 10rem;
  }
}
@media (max-width: 767px) {
  .menu__gallery__image__title__text {
    font-size: 5rem;
  }
}
.menu__gallery__image__title__text span span {
  opacity: 0;
}
@media (max-width: 1023px) {
  .menu__gallery__image__title__text span span {
    opacity: 1;
  }
}
@media (max-width: 767px) {
  .menu__gallery__image__title__text span span {
    opacity: 1;
  }
}
.menu__gallery__image__title__phone__left {
  display: none;
}
.menu__gallery__image__title__phone__right {
  display: none;
}

.gallery__modal {
  height: 100%;
  width: 100%;
  z-index: 5;
  background: rgba(0, 0, 0, 0.5803921569);
  opacity: 0;
  display: none;
  padding: 20rem;
}
@media (max-width: 1023px) {
  .gallery__modal {
    padding: 10rem;
  }
}
@media (max-width: 767px) {
  .gallery__modal {
    padding: 2rem;
  }
}
.gallery__modal__selected {
  height: 100%;
  width: 100%;
}
.gallery__modal__selected__figure {
  height: 100%;
  width: 100%;
}
.gallery__modal__selected__figure__image {
  height: 100%;
  width: 100%;
  object-fit: contain;
}
.gallery__modal__close {
  position: absolute;
  bottom: 5.2rem;
  left: 50%;
  transform: translateX(-50%);
}
.gallery__modal__close__button {
  font-weight: 300;
  font-style: normal;
  display: block;
  line-height: 1;
  padding: 0.5rem 0;
  text-shadow: -1px -1px 0 #0D0D0D, 1px -1px 0 #0D0D0D, -1px 1px 0 #0D0D0D, 1px 1px 0 #0D0D0D;
  transition: all 0.5s ease-in-out;
  color: #5E6572;
}
@media (max-width: 1023px) {
  .gallery__modal__close__button {
    font-size: 10rem;
    color: #EEF1EF;
  }
}
@media (max-width: 767px) {
  .gallery__modal__close__button {
    font-size: 3rem;
  }
}
.gallery__modal__close__button::first-letter {
  font-style: italic;
  text-transform: uppercase;
}
@media (max-width: 1023px) {
  .gallery__modal__close__button::first-letter {
    font-size: 15rem;
  }
}
@media (max-width: 767px) {
  .gallery__modal__close__button::first-letter {
    font-size: 5rem;
  }
}
.gallery__modal__close__button:hover {
  color: #EEF1EF;
  cursor: pointer;
}
.gallery__media {
  z-index: 3;
}
.gallery__media__div {
  margin: 0 10rem;
  cursor: pointer;
}
.gallery__media__div:first-child {
  margin-left: 0;
}
.gallery__media__div:last-child {
  margin-right: 0;
}
.gallery__media__div__figure {
  width: 50rem;
  height: 65rem;
  transform: translateY(50%);
  position: relative;
  visibility: hidden;
}
@media (max-width: 1023px) {
  .gallery__media__div__figure {
    width: 80rem;
    height: 100rem;
  }
}
@media (max-width: 767px) {
  .gallery__media__div__figure {
    width: 48rem;
    height: 60rem;
  }
}
@media (max-width: 399px) {
  .gallery__media__div__figure {
    width: 38rem;
    height: 50rem;
  }
}
.gallery__media__div__figure__image {
  object-fit: cover;
}
.gallery__wrapper {
  display: flex;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-24rem, -50%);
}
@media (max-width: 1023px) {
  .gallery__wrapper {
    transform: translate(-40rem, -50%);
  }
}
@media (max-width: 767px) {
  .gallery__wrapper {
    transform: translate(-24rem, -50%);
  }
}
@media (max-width: 399px) {
  .gallery__wrapper {
    transform: translate(-19rem, -50%);
  }
}
.gallery__info {
  position: absolute;
  top: 50%;
  left: 6rem;
  transform: translateY(-50%);
  z-index: 1;
  mix-blend-mode: difference;
}
@media (max-width: 1023px) {
  .gallery__info {
    padding: 40rem 0;
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
  }
}
@media (max-width: 767px) {
  .gallery__info {
    left: 0;
    padding: 20rem 5rem;
  }
}
.gallery__info__title {
  text-transform: uppercase;
  letter-spacing: 2rem;
}
@media (max-width: 1023px) {
  .gallery__info__title {
    font-size: 10rem;
  }
}
@media (max-width: 767px) {
  .gallery__info__title {
    font-size: 5rem;
  }
}
@media (max-width: 1023px) {
  .gallery__info__desc {
    align-self: flex-start;
    width: 70%;
    font-size: 4rem;
    padding-left: 10rem;
  }
}
@media (max-width: 767px) {
  .gallery__info__desc {
    width: 80%;
    font-size: 2rem;
  }
}
.gallery__back {
  position: fixed;
  bottom: 5.2rem;
  right: 50%;
  transform: translateX(50%);
  z-index: 4;
}
.gallery__back__button {
  font-weight: 300;
  font-style: normal;
  display: block;
  line-height: 1;
  padding: 0.5rem 0;
  text-shadow: -1px -1px 0 #0D0D0D, 1px -1px 0 #0D0D0D, -1px 1px 0 #0D0D0D, 1px 1px 0 #0D0D0D;
  transition: all 0.5s ease-in-out;
  color: #5E6572;
}
@media (max-width: 1023px) {
  .gallery__back__button {
    font-size: 10rem;
    color: #EEF1EF;
  }
}
@media (max-width: 767px) {
  .gallery__back__button {
    font-size: 3rem;
  }
}
.gallery__back__button::first-letter {
  font-style: italic;
  text-transform: uppercase;
}
@media (max-width: 1023px) {
  .gallery__back__button::first-letter {
    font-size: 15rem;
  }
}
@media (max-width: 767px) {
  .gallery__back__button::first-letter {
    font-size: 5rem;
  }
}
.gallery__back__button:hover {
  color: #EEF1EF;
}

.navigation {
  z-index: 7;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 10rem;
  border: 1px solid #5B5E5E;
  border-top: none;
}
.navigation__wrapper {
  height: 100%;
  width: 100%;
  display: grid;
  grid-template-columns: 12rem 1fr;
  grid-template-rows: 10rem;
  align-content: center;
  justify-content: center;
  overflow: hidden;
}
.navigation__logo {
  position: relative;
  height: 100%;
  width: 100%;
  border-right: 1px solid #5B5E5E;
}
.navigation__logo__link {
  height: 100%;
  width: 100%;
}
.navigation__logo__figure {
  height: 100%;
  width: 100%;
  visibility: hidden;
}
.navigation__logo__figure__image {
  object-fit: cover;
}
.navigation__list {
  opacity: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  background-color: #0D0D0D;
  padding: 0 24rem 0 12rem;
}
.navigation__list__item {
  pointer-events: auto;
  margin: 0 2rem;
  overflow: hidden;
}
.navigation__list__item__link {
  font-weight: 300;
  display: block;
  padding: 0.5rem 0;
}
@media (max-width: 1023px) {
  .navigation__list__item__link {
    font-size: 4rem;
  }
}
@media (max-width: 767px) {
  .navigation__list__item__link {
    font-size: 2.5rem;
  }
}

.footer {
  position: absolute;
  bottom: 0;
  right: 0;
  height: 10rem;
  width: 12rem;
  background: #0D0D0D;
  border: 1px solid #5B5E5E;
  border-right: none;
  border-bottom: none;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  z-index: 6;
}
.footer__top {
  grid-area: 1/1/2/-1;
  align-self: center;
  justify-self: center;
}
.footer__title {
  grid-area: 2/1/3/-1;
  align-self: center;
  justify-self: center;
}
.footer__title__text {
  color: #EEF1EF;
}
.footer__btm {
  grid-area: 3/1/-1/-1;
  align-self: center;
  justify-self: center;
}
.footer__icons {
  display: flex;
  align-items: center;
  justify-content: center;
}
.footer__icons__media {
  height: 2.5rem;
  width: 2.5rem;
  margin: 0 1.325rem;
  vertical-align: top;
  opacity: 1;
  transition: all 0.2s linear;
  opacity: 0;
  pointer-events: none;
}
.footer__icons__media:hover {
  opacity: 0.5;
}
.footer__icons__media:first-child {
  margin-left: 0;
}
.footer__icons__media:last-child {
  margin-right: 0;
}
.footer__icons__media__div {
  height: 100%;
  width: 100%;
  cursor: pointer;
}
.footer__icons__media__div__link {
  visibility: hidden;
}
.footer__icons__media__div__icon {
  height: 100%;
  width: 100%;
  object-fit: cover;
  filter: invert(1);
}

.home {
  overflow: hidden;
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: repeat(5, 1fr);
  gap: 0px 0px;
}
.home__logo__figure {
  position: relative;
  height: 100%;
  width: 100%;
  visibility: hidden;
}
.home__logo__figure__image {
  object-fit: cover;
}
.home__gallery {
  z-index: 3;
}
.home__gallery__wrapper {
  display: flex;
  justify-content: space-around;
  align-items: center;
}
.home__gallery__showcase {
  display: flex;
}
.home__gallery__image {
  display: flex;
  margin: 0 2rem;
}
.home__gallery__image__link {
  padding: 2rem 0;
  display: block;
  z-index: 100;
}
.home__gallery__image__figure {
  position: relative;
  height: 30rem;
  width: 10rem;
  visibility: hidden;
}
.home__gallery__image__figure__image {
  object-fit: cover;
}

.about__media__figure {
  height: 40rem;
  width: 50rem;
  position: relative;
}
@media (max-width: 1023px) {
  .about__media__figure {
    height: 110rem;
    width: 120rem;
  }
}
@media (max-width: 767px) {
  .about__media__figure {
    height: 80rem;
    width: 90rem;
  }
}
.about__media__figure__image {
  object-fit: cover;
}
.about__header {
  padding-top: 10rem;
  display: grid;
  grid-template-columns: 1fr 70rem;
}
@media (max-width: 1023px) {
  .about__header {
    display: flex;
    flex-direction: column;
    padding: 20rem 0;
  }
}
.about__header__title {
  grid-area: 1/1/-1/2;
  align-self: center;
  padding: 10rem 12.7rem;
  border-right: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__header__title {
    border: none;
    padding: 10rem;
    text-align: center;
  }
}
.about__header__title__text {
  letter-spacing: 2rem;
}
@media (max-width: 1023px) {
  .about__header__title__text {
    font-size: 25rem;
  }
}
@media (max-width: 767px) {
  .about__header__title__text {
    font-size: 10rem;
  }
}
.about__header__media {
  grid-area: 1/2/-1/-1;
  align-self: center;
  justify-self: center;
  visibility: hidden;
}
.about__background {
  border-top: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__background {
    border: none;
  }
}
.about__background__gc {
  display: grid;
  grid-template-columns: 1fr 5rem 70rem;
}
@media (max-width: 1023px) {
  .about__background__gc {
    display: flex;
    flex-direction: column;
  }
}
.about__background__gc__smdesc {
  grid-area: 1/1/-1/2;
  height: 100%;
  width: 100%;
  padding: 10rem 12.7rem;
  border-bottom: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__background__gc__smdesc {
    border: none;
    margin-top: 30rem;
    padding: 5rem;
  }
}
@media (max-width: 767px) {
  .about__background__gc__smdesc {
    margin-top: 60rem;
  }
}
.about__background__gc__smdesc__div {
  height: 100%;
  padding-top: 5rem;
}
@media (max-width: 1023px) {
  .about__background__gc__smdesc__div {
    padding: 5rem;
    margin-bottom: 30rem;
  }
}
@media (max-width: 767px) {
  .about__background__gc__smdesc__div {
    padding: 2.7rem;
    margin-bottom: 60rem;
  }
}
.about__background__gc__smdesc__div__text {
  height: 100%;
}
@media (max-width: 1023px) {
  .about__background__gc__smdesc__div__text {
    font-style: italic;
    font-size: 8rem;
    padding: 10rem;
  }
}
@media (max-width: 767px) {
  .about__background__gc__smdesc__div__text {
    font-size: 4rem;
    padding: 0;
  }
}
.about__background__gc__bg {
  grid-area: 1/2/-1/3;
  height: 100%;
  width: 100%;
  align-self: flex-start;
  justify-self: center;
}
.about__background__gc__bg__title {
  display: flex;
  justify-content: center;
  align-items: center;
  writing-mode: vertical-rl;
  transform: scale(-1, -1);
  height: 100%;
  width: 100%;
  padding: 2rem 0;
  border-left: 1px solid #A9B4C2;
  border-top: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__background__gc__bg__title__text {
    font-size: 20rem;
    text-transform: uppercase;
    letter-spacing: 5rem;
  }
}
@media (max-width: 767px) {
  .about__background__gc__bg__title__text {
    font-size: 10rem;
  }
}
.about__background__gc__bg__title__text .word {
  display: flex;
}
.about__background__desc {
  grid-area: 1/3/-1/-1;
}
.about__background__desc__frame {
  text-align: center;
  padding: 4rem 2rem;
  border-top: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__background__desc__frame {
    padding: 6rem 2rem;
  }
}
@media (max-width: 767px) {
  .about__background__desc__frame {
    padding: 4rem 2rem;
  }
}
.about__background__desc__frame:first-of-type {
  border: none;
}
.about__background__desc__frame:last-of-type {
  border-bottom: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__background__desc__frame__text {
    font-size: 5rem;
  }
}
@media (max-width: 767px) {
  .about__background__desc__frame__text {
    font-size: 2.5rem;
  }
}
.about__clients {
  padding-bottom: 12.7rem;
}
@media (max-width: 1023px) {
  .about__clients {
    margin-top: 30rem;
  }
}
@media (max-width: 767px) {
  .about__clients {
    margin-top: 50rem;
  }
}
@media (max-width: 1023px) {
  .about__clients__title {
    text-align: center;
  }
}
.about__clients__title__text {
  letter-spacing: 2rem;
  padding: 12.7rem;
}
@media (max-width: 1023px) {
  .about__clients__title__text {
    padding: 2rem;
    letter-spacing: 0.5rem;
    font-size: 20rem;
  }
}
@media (max-width: 767px) {
  .about__clients__title__text {
    font-size: 10rem;
  }
}
@media (max-width: 1023px) {
  .about__clients__gallery {
    margin-top: 30rem;
  }
}
@media (max-width: 767px) {
  .about__clients__gallery {
    margin-top: 20rem;
  }
}
.about__clients__gallery__wrapper {
  padding: 0 35rem;
}
@media (max-width: 1023px) {
  .about__clients__gallery__wrapper {
    padding: 0rem;
  }
}
.about__clients__gallery__client {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__clients__gallery__client {
    justify-content: center;
  }
}
@media (max-width: 767px) {
  .about__clients__gallery__client {
    justify-content: space-between;
  }
}
.about__clients__gallery__client__name {
  letter-spacing: 1rem;
  padding: 3rem;
}
@media (max-width: 1023px) {
  .about__clients__gallery__client__name {
    font-size: 5rem;
    padding: 5rem;
  }
}
@media (max-width: 767px) {
  .about__clients__gallery__client__name {
    font-size: 2.5rem;
  }
}
.about__desc {
  display: grid;
  grid-template-columns: 1fr 70rem;
  height: 100%;
  width: 100%;
  padding: 12.7rem;
  padding-right: 0;
}
@media (max-width: 1023px) {
  .about__desc {
    display: flex;
    flex-direction: column;
    padding: 2.7rem;
  }
}
.about__desc__gc {
  grid-area: 1/1/-1/2;
  height: 100%;
  width: 100%;
  align-self: center;
  justify-self: center;
  padding-left: 12.7rem;
  display: grid;
  grid-template-columns: 5rem 1fr;
}
@media (max-width: 1023px) {
  .about__desc__gc {
    display: flex;
    flex-direction: column;
    padding: 2.7rem;
  }
}
.about__desc__gc__title {
  grid-area: 1/1/-1/2;
  height: 100%;
  width: 100%;
}
@media (max-width: 1023px) {
  .about__desc__gc__title {
    margin-top: 40rem;
    margin-bottom: 40rem;
  }
}
@media (max-width: 767px) {
  .about__desc__gc__title {
    margin-top: 30rem;
    margin-bottom: 10rem;
  }
}
.about__desc__gc__title__text {
  writing-mode: vertical-rl;
  transform: scale(-1, -1);
}
@media (max-width: 1023px) {
  .about__desc__gc__title__text {
    font-size: 20rem;
    text-transform: uppercase;
    letter-spacing: 5rem;
  }
}
@media (max-width: 767px) {
  .about__desc__gc__title__text {
    font-size: 10rem;
  }
}
.about__desc__gc__title__text .word {
  display: flex;
}
.about__desc__gc__desc {
  grid-area: 1/2/-1/-1;
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
@media (max-width: 1023px) {
  .about__desc__gc__desc {
    justify-content: center;
  }
}
@media (max-width: 767px) {
  .about__desc__gc__desc {
    justify-content: flex-start;
  }
}
@media (max-width: 1023px) {
  .about__desc__gc__desc__text {
    font-size: 5rem;
  }
}
@media (max-width: 767px) {
  .about__desc__gc__desc__text {
    font-size: 2.5rem;
  }
}
.about__desc__location {
  grid-area: 1/2/-1/-1;
  width: 100%;
  height: 100%;
  padding: 12.7rem;
  border-left: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__desc__location {
    border: none;
    padding: 2.7rem;
    text-align: center;
    margin: 20rem 0;
  }
}
@media (max-width: 767px) {
  .about__desc__location {
    margin: 10rem 0;
  }
}
.about__desc__location__text {
  writing-mode: vertical-lr;
  transform: scale(1, 1);
}
@media (max-width: 1023px) {
  .about__desc__location__text {
    writing-mode: horizontal-tb;
    transform: none;
    font-size: 9rem;
  }
}
@media (max-width: 767px) {
  .about__desc__location__text {
    writing-mode: horizontal-tb;
    transform: none;
    font-size: 4rem;
  }
}
.about__press {
  padding-bottom: 12.7rem;
}
@media (max-width: 1023px) {
  .about__press {
    margin-top: 40rem;
  }
}
@media (max-width: 767px) {
  .about__press {
    margin-top: 50rem;
  }
}
@media (max-width: 1023px) {
  .about__press__title {
    text-align: center;
    margin-bottom: 10rem;
  }
}
.about__press__title__text {
  text-transform: uppercase;
  letter-spacing: 1rem;
  padding: 12.7rem;
  padding-top: 0;
}
@media (max-width: 1023px) {
  .about__press__title__text {
    padding: 0;
    font-size: 20rem;
  }
}
@media (max-width: 767px) {
  .about__press__title__text {
    font-size: 10rem;
  }
}
.about__press__content {
  padding: 0 35rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}
@media (max-width: 1023px) {
  .about__press__content {
    padding: 0;
  }
}
.about__press__content__div {
  width: 100%;
  border-bottom: 1px solid #A9B4C2;
  transition: all 0.5s ease-in-out;
}
@media (max-width: 1023px) {
  .about__press__content__div:first-of-type {
    border-top: 1px solid #A9B4C2;
  }
}
.about__press__content__div__title {
  cursor: pointer;
  padding: 3rem;
}
@media (max-width: 1023px) {
  .about__press__content__div__title {
    font-size: 5rem;
    padding: 5rem;
  }
}
@media (max-width: 767px) {
  .about__press__content__div__title {
    font-size: 2.5rem;
    padding: 3rem;
  }
}
.about__press__content__div__title__link {
  visibility: hidden;
}
.about__contact {
  height: 100%;
  width: 100%;
  padding: 22.7rem;
}
@media (max-width: 1023px) {
  .about__contact {
    padding: 2.7rem;
    margin-top: 40rem;
  }
}
@media (max-width: 767px) {
  .about__contact {
    margin-top: 50rem;
  }
}
.about__contact__title {
  padding-bottom: 6rem;
}
.about__contact__title__text {
  text-transform: uppercase;
}
@media (max-width: 1023px) {
  .about__contact__title__text {
    font-size: 20rem;
  }
}
@media (max-width: 767px) {
  .about__contact__title__text {
    font-size: 10rem;
  }
}
.about__contact__details {
  padding-bottom: 12.7rem;
  display: flex;
  flex-direction: column;
}
.about__contact__details__copied {
  padding: 0.5rem 0;
  opacity: 0;
}
@media (max-width: 1023px) {
  .about__contact__details__copied {
    font-size: 5rem;
  }
}
@media (max-width: 767px) {
  .about__contact__details__copied {
    font-size: 3rem;
  }
}
.about__contact__details__text {
  cursor: pointer;
  line-height: 2;
  letter-spacing: 1rem;
  padding: 0.5rem 0;
}
@media (max-width: 1023px) {
  .about__contact__details__text {
    letter-spacing: 0.5rem;
    padding: 0;
    font-size: 8rem;
  }
}
@media (max-width: 767px) {
  .about__contact__details__text {
    font-size: 4rem;
  }
}
.about__contact__icons {
  display: flex;
  align-items: center;
  justify-content: center;
}
@media (max-width: 1023px) {
  .about__contact__icons {
    flex-wrap: wrap;
    padding: 5rem;
  }
}
.about__contact__icons__icon {
  height: 4rem;
  width: 4rem;
  margin: 0 2rem;
  vertical-align: top;
  opacity: 1;
  transition: all 0.2s linear;
}
@media (max-width: 1023px) {
  .about__contact__icons__icon {
    height: 10rem;
    width: 10rem;
    margin: 5rem;
  }
}
@media (max-width: 767px) {
  .about__contact__icons__icon {
    height: 5rem;
    width: 5rem;
    margin: 5rem;
  }
}
.about__contact__icons__icon:hover {
  opacity: 0.5;
}
.about__contact__icons__icon:first-child {
  margin-left: 0;
}
@media (max-width: 767px) {
  .about__contact__icons__icon:first-child {
    margin-left: 2rem;
  }
}
.about__contact__icons__icon:last-child {
  margin-right: 0;
}
@media (max-width: 767px) {
  .about__contact__icons__icon:last-child {
    margin-right: 2rem;
  }
}
.about__contact__icons__icon__div {
  height: 100%;
  width: 100%;
  cursor: pointer;
}
.about__contact__icons__icon__div__link {
  visibility: hidden;
}
.about__contact__icons__icon__image {
  height: 100%;
  width: 100%;
  object-fit: cover;
}
.about__footer {
  height: 100%;
  width: 100%;
  padding-bottom: 10rem;
  display: grid;
  grid-template-columns: 70rem 1fr;
  border-top: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__footer {
    border: none;
    padding: 20rem 0;
    display: flex;
    flex-direction: column;
    margin-top: 50rem;
  }
}
.about__footer__media {
  grid-area: 1/1/-1/2;
  align-self: center;
  justify-self: center;
  visibility: hidden;
}
.about__footer__title {
  grid-area: 1/2/-1/-1;
  align-self: center;
  padding: 10rem 12.7rem;
  border-left: 1px solid #A9B4C2;
}
@media (max-width: 1023px) {
  .about__footer__title {
    border: none;
    padding: 10rem;
    text-align: center;
  }
}
.about__footer__title__text {
  letter-spacing: 2rem;
}
@media (max-width: 1023px) {
  .about__footer__title__text {
    font-size: 25rem;
  }
}
@media (max-width: 767px) {
  .about__footer__title__text {
    font-size: 10rem;
  }
}

.video {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: 100px repeat(3, 1fr);
}
@media (max-width: 1023px) {
  .video {
    display: grid;
    grid-template-rows: 100px repeat(3, 1fr);
    grid-template-columns: 1fr;
  }
}
.video__desc {
  grid-area: 2/1/4/2;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
}
@media (max-width: 1023px) {
  .video__desc {
    grid-area: 3/1/4/-1;
    padding-top: 5rem;
  }
}
.video__desc__title {
  font-style: italic;
}
@media (max-width: 1023px) {
  .video__desc__title {
    font-size: 4rem;
  }
}
@media (max-width: 767px) {
  .video__desc__title {
    font-size: 2rem;
  }
}
@media (max-width: 1023px) {
  .video__desc__text {
    font-size: 6rem;
  }
}
@media (max-width: 767px) {
  .video__desc__text {
    font-size: 4rem;
  }
}
.video__desc__client {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.video__desc__name {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.video__desc__role {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.video__info {
  grid-area: 4/1/-1/3;
  align-self: center;
  justify-self: center;
  display: flex;
  align-items: center;
  justify-content: center;
}
@media (max-width: 1023px) {
  .video__info {
    grid-area: 4/1/-1/-1;
    padding: 2.5rem 5rem;
    width: 60%;
    align-self: flex-start;
  }
}
@media (max-width: 767px) {
  .video__info {
    width: 100%;
  }
}
@media (max-width: 1023px) {
  .video__info__text {
    font-size: 4rem;
  }
}
@media (max-width: 767px) {
  .video__info__text {
    font-size: 2.5rem;
  }
}
.video__wrapper {
  grid-area: 2/2/4/-1;
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
}
@media (max-width: 1023px) {
  .video__wrapper {
    grid-area: 2/1/3/-1;
  }
}
.video__media {
  width: 100%;
  height: 100%;
  position: relative;
}
.video__preview {
  z-index: 2;
  height: 100%;
  width: 100%;
}
.video__preview__image {
  height: 100%;
  width: 100%;
  object-fit: cover;
}
.video__selected {
  width: 100%;
  height: 100%;
}
.video__selected__video {
  z-index: 3;
  opacity: 0;
  object-fit: contain;
}
.video__back {
  grid-area: 4/3/-1/-1;
  align-self: center;
  justify-self: flex-start;
  z-index: 3;
}
@media (max-width: 1023px) {
  .video__back {
    position: fixed;
    bottom: 4rem;
    left: 50%;
    transform: translateX(-50%);
  }
}
.video__back__button {
  font-weight: 300;
  font-style: normal;
  display: block;
  line-height: 1;
  padding: 0.5rem 0;
  text-shadow: -1px -1px 0 #0D0D0D, 1px -1px 0 #0D0D0D, -1px 1px 0 #0D0D0D, 1px 1px 0 #0D0D0D;
  transition: all 0.5s ease-in-out;
  color: #5E6572;
}
@media (max-width: 1023px) {
  .video__back__button {
    font-size: 10rem;
    color: #EEF1EF;
  }
}
@media (max-width: 767px) {
  .video__back__button {
    font-size: 3rem;
  }
}
.video__back__button::first-letter {
  font-style: italic;
  text-transform: uppercase;
}
@media (max-width: 1023px) {
  .video__back__button::first-letter {
    font-size: 15rem;
  }
}
@media (max-width: 767px) {
  .video__back__button::first-letter {
    font-size: 5rem;
  }
}
.video__back__button:hover {
  color: #EEF1EF;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/